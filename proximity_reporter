#!/usr/bin/perl
#############################################################################################
#
#__________                     .__        .__  __
#\______   \_______  _______  __|__| _____ |__|/  |_ ___.__.
# |     ___/\_  __ \/  _ \  \/  /  |/     \|  \   __<   |  |
# |    |     |  | \(  <_> >    <|  |  Y Y  \  ||  |  \___  |
# |____|     |__|   \____/__/\_ \__|__|_|  /__||__|  / ____|
#                              \/        \/          \/
#
# proximity_reporter
#
# Copyright (C) 2012, Silas Cutler
#      <Silas.Cutler@BlackListThisDomain.com / SCutler@SecureWorks.com>
#
# This program is free software; you can redistribute it and/or modify it without restriction.
#      Any implimentation or profitting from this code requires the consent of the original 
#      author.  Any updates or impovements are not required to be shared with the author, but 
#      encoraged.  
#
# This software is provided as is.  The author or any associated parties are not liable for 
#      any use of this software or any damage that may occur from this software.
#
#############################################################################################
#	v0.8
#############################################################################################

use strict;
use warnings;
use DBI;
use Authen::SASL;
use MIME::Lite;
use Getopt::Long;
use Config::Simple;


my $current_Time = time;
my $report = "";

require 'etc/config.pm';
require 'lib/functions.pm';
require 'lib/db.pm';


#Enable functionality & Paths
our ($proc_pcap_proc_enabled, $proc_pcap_path);
our ($proc_dns_proc_enabled, $proc_dns_path);
our ($user_pcap_path, $user_dns_path);

#Sinkhole Attributes
our ($var_sinkhole_address);

#Database Functions & DB Connection
our ($dbh );

our ( $mail_From_Address, $mail_From_Address_Password, $mail_Mail_Server, $mail_Mail_Server_Port, $mail_report_address );



#Input Handling.
our ($help,
	$processing_stats, 
	$search_filter_notes, 
	$search_filter,
	$search_filter_asn_number,
	$search_filter_asn_name,
	$search_recent, 
	$search_connection_asn_number, 
	$search_connection_asn_name,
	$pcap_limiter,
	$uniq_hosts,
	$search_pcap, 
	$count_only,
	$list_scanner, 
	$list_unmatched,
	$email,
	$print_asn,
	$email_from,
	$search_hostname,
	$search_hostname_rough,
	$search_hostname_only,
	$filter_status
	);
	
usage_reporter() if ( ( @ARGV < 1 or ! GetOptions(
    'help|?'									=>      \$help,
    'proc-stat|ps' 								=>		\$processing_stats,
    'search-filter|sf=s'		        		=> 		\$search_filter,
    'search-filter-notes|sfn=s' 				=>		\$search_filter_notes,
    'search-filter-asn|sfa=s'					=>		\$search_filter_asn_number,
    'search-filter-asn-name|sfan=s'				=>		\$search_filter_asn_name,
    
    'search-connection-asn|sca=s'				=> 		\$search_connection_asn_number,
    'search-connection-asn-name|scan=s'			=> 		\$search_connection_asn_name,
    
    'search-hostname|sh=s'				    	=>		\$search_hostname,
    'search-hostname-all|sha=s'			    	=>	    \$search_hostname_rough,
    'search-hostname-only|sho=s'				=>		\$search_hostname_only,
 
    'list-scanners|ls'			    			=> 		\$list_scanner,
    'list-unmatched|lu'							=>		\$list_unmatched,	
    'ip-pcap|pcap=s'							=> 		\$search_pcap, 
 
    'search-recent|r'							=> 		\$search_recent,
    'count|c'									=>		\$count_only,
    'email|e=s'									=>		\$email,
    'print-asn|pa' 								=>		\$print_asn,
    'efrom|from=s'								=>		\$email_from,
    'filter-status|fs'							=>		\$filter_status,
    'pcap_limit|pl=s'                           =>      \$pcap_limiter,
    'uniq_hosts|ul'								=>		\$uniq_hosts,

        )or defined $help  )  );

####################################################################################
################			Main								####################
####################################################################################

if ( defined($processing_stats))        		
	{ print_pcap_stats();}
if ( defined($filter_status))
	{ print_filter_stats(); }

if ( defined($search_filter_notes))           
			{ search_print(	search_filter_notes_matched_hosts($search_filter_notes), "Hosts based on Filter Notes /$search_filter_notes/") ;}
if ( defined($search_filter))		    
			{ search_print(	search_filter_id_matched_hosts($search_filter), "Hosts based on Filter ID- $search_filter");}
if ( defined($search_filter_asn_number))      
			{ search_print(	search_asn_number_matched_hosts($search_filter_asn_number), "Hosts in ASN - $search_filter_asn_number");}
if ( defined($search_filter_asn_name))		
			{ search_print(	search_asn_name_matched_hosts($search_filter_asn_name), "Hosts with ASN name like /$search_filter_asn_name/");}

if ( defined($search_connection_asn_number))    
			{ search_print(	search_connection_asn_number($search_connection_asn_number), "Hosts based on ASN Number - $search_connection_asn_number");}
if ( defined($search_connection_asn_name))      
			{ search_print(	search_connection_asn_name($search_connection_asn_name), "Hosts based on ASN Name /$search_connection_asn_name/");}

if (defined($search_hostname))
			{ search_print(	search_host_names($search_hostname), "Connections for hostname \'$search_hostname\'");}
if (defined($search_hostname_rough))
			{ search_print(	search_host_names_rough($search_hostname_rough), "Connections for hostname /$search_hostname_rough/");}
if (defined($search_hostname_only))
			{ search_print(	search_host_names_only($search_hostname_only), "Hostnames related to /$search_hostname_only/");}


if ( defined($search_pcap))						
			{ pcap_search_print(	pcap_search($search_pcap));}
if ( defined($list_scanner))					
			{ scanner_search_print(	search_scanner());}
if ( defined($list_unmatched))					
			{ unmatched_search_print(	search_unmatched());}
	
if ( defined($email))							
			{ reporter_email_report($email);}




####//Fin



